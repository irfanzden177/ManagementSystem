@model IEnumerable<ManagementSystem.Models.tb_salary>

@{
    ViewBag.Title = "Index";
}

<style>
    .badge {
        padding: 1px 9px 2px;
        font-size: 12.025px;
        font-weight: bold;
        white-space: nowrap;
        color: #ffffff;
        background-color: #70b9c5;
        -webkit-border-radius: 9px;
        -moz-border-radius: 9px;
        border-radius: 9px;
    }

        .badge:hover {
            color: #ffffff;
            text-decoration: none;
            cursor: pointer;
        }

    .badge-error {
        background-color: #b94a48;
    }

        .badge-error:hover {
            background-color: #953b39;
        }

    .badge-warning {
        background-color: #f89406;
    }

        .badge-warning:hover {
            background-color: #c67605;
        }

    .badge-success {
        background-color: ##5cc45e;
    }

        .badge-success:hover {
            background-color: #356635;
        }

    .badge-info {
        background-color: #3a87ad;
    }

        .badge-info:hover {
            background-color: #2d6987;
        }

    .badge-inverse {
        background-color: #333333;
    }

        .badge-inverse:hover {
            background-color: #1a1a1a;
        }
</style>

<body>
    <!-- Begin Page Content -->
    <div class="container-fluid">

        <!-- Page Heading -->
        <h1 class="h3 mb-2 text-gray-800">Kemaskini Butiran Gaji</h1>


        <!-- DataTales Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">

                <h6 class="m-0 font-weight-bold text-primary">Senarai Butiran Gaji</h6>
            </div>

            <div class="card-body">
                <div class="table-responsive">


                 


                    <br>
                    @Html.ActionLink("Tambah Butiran Gaji", "Create", null, new { @class = "btn btn-outline-primary" })
                    
                    @Html.ActionLink("Jana Gaji Bulan Ini", "GenerateAllSalary", null, new { @class = "btn btn-outline-info" })


                    <hr>
                    <table class="table table-bordered" id="example1" width="100%" cellspacing="0">
                        <thead>
                            <tr>

                                <th>
                                    @Html.DisplayNameFor(model => model.tb_user.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.tb_user.IC)
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.Amount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.month)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Date)
                                </th>

                                <th>Kemaskini</th>
                            </tr>
                        </thead>
                       
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.tb_user.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tb_user.IC)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Amount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.month)
                                    </td>
                                    <td>
                                        <span class="badge" id="badgeId">@item.Status</span>
                                        @*@Html.DisplayFor(modelItem => item.Status)*@
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Date)
                                    </td>

                                    <td>



                                        @Html.ActionLink("Lihat Butiran", "Details", null, new { id = item.ID }, new { @class = "btn btn-info" })


                                        @Html.ActionLink("Kemaskini", "Edit", null, new { id = item.ID }, new { @class = "btn btn-warning" })

                                        @Html.ActionLink("Padam", "Delete", null, new { id = item.ID }, new { @class = "btn btn-danger" })
                                        <button class="btn btn-outline-success ">@Html.ActionLink("Lihat Invois", "ViewInvoice", null, new { id = item.ID }, new { @target = "_blank" }) </button>
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                    <script>
                        //function myFunction() {
                        //    var input, filter, table, tr, td, i, txtValue;
                        //    input = document.getElementById("myInput");
                        //    filter = input.value.toUpperCase();
                        //    table = document.getElementById("myTable");
                        //    tr = table.getElementsByTagName("tr");
                        //    for (i = 0; i < tr.length; i++) {
                        //        td = tr[i].getElementsByTagName("td")[1];
                        //        if (td) {
                        //            txtValue = td.textContent || td.innerText;
                        //            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        //                tr[i].style.display = "";
                        //            } else {
                        //                tr[i].style.display = "none";
                        //            }
                        //        }
                        //    }
                        //}

                        function badgeColor() {
                            let el = document.getElementById("badgeId");
                            console.log(el);
                            let text = el.trim();
                            console.log(text);
                            if (text == "Selesai") {
                                text.className = "badge badge-success";
                            } else if (text == "Dalam Proses") {
                                text.className = "badge badge-warning";
                            } else {
                                text.className = "badge badge-primary";
                            }
                        }
                        document.getElementById("badgeId").onload = badgeColor();
                    </script>

                </div>
            </div>
        </div>
    </div>
</body>

@*@functions{
    public string badgeColor(string status)
    {

        switch (status.Trim())
        {
            case "Dalam Proses":
                return "badge badge-warning";
                break;
            case "Selesai":
                return "badge badge-success";
                break;
            default:
                return "badge badge-primary";
        }
    }
}*@



